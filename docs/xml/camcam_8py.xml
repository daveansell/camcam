<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="camcam_8py" kind="file" language="Python">
    <compoundname>camcam.py</compoundname>
    <innerclass refid="classcamcam_1_1_cam_cam" prot="public">camcam::CamCam</innerclass>
    <innernamespace refid="namespacecamcam">camcam</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacecamcam" refkind="compound"><highlight class="comment">#!/usr/bin/python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>minivec<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>path<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>shapes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>parts<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>boxes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#import<sp/>importlib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>optparse<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OptionParser</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Milling</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pickle</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classcamcam_1_1_cam_cam" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcamcam_1_1_cam_cam" kindref="compound">CamCam</ref>:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcamcam_1_1_cam_cam_1af4e79f86f944d76fbb2e8b369d3ee206" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classcamcam_1_1_cam_cam_1af7e60c4dabd6dcfab7ca2d31e070c2c2" kindref="member">planes</ref>=[]</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcamcam_1_1_cam_cam_1a98153a1dbd08286b0a8e2bd8c26a8cf1" kindref="member">add_plane</ref>(self,plane):</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>print<sp/>plane.obType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(plane,</highlight><highlight class="stringliteral">&apos;obType&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>plane.obType==</highlight><highlight class="stringliteral">&apos;Plane&apos;</highlight><highlight class="normal">:</highlight><highlight class="comment">#type(plane)<sp/>is<sp/>Plane:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.planes.append(plane)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plane</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Tring<sp/>to<sp/>add<sp/>a<sp/>non-plane<sp/>to<sp/>camcam&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcamcam_1_1_cam_cam_1a67c7d684131d923d4eca80dc585f45d4" kindref="member">render</ref>(self,<sp/>mode,config):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modeconfig=milling.mode_config[mode]</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>modeconfig[</highlight><highlight class="stringliteral">&apos;overview&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>plane<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classcamcam_1_1_cam_cam_1af7e60c4dabd6dcfab7ca2d31e070c2c2" kindref="member">planes</ref>:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plane.render_all(mode,config)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out+=plane.out</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f=open(</highlight><highlight class="stringliteral">&quot;Overview_&quot;</highlight><highlight class="normal">+mode+</highlight><highlight class="stringliteral">&quot;.svg&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(modeconfig[</highlight><highlight class="stringliteral">&apos;prefix&apos;</highlight><highlight class="normal">]<sp/>+<sp/>out<sp/>+<sp/>modeconfig[</highlight><highlight class="stringliteral">&apos;postfix&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.close()</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>plane<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classcamcam_1_1_cam_cam_1af7e60c4dabd6dcfab7ca2d31e070c2c2" kindref="member">planes</ref>:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plane.render_all(mode,config)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcamcam_1_1_cam_cam_1a9df1eca09309d548f366802eb78643aa" kindref="member">render_layout</ref>(<sp/>self,<sp/>mode,<sp/>layout_file,<sp/>config):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modeconfig=milling.mode_config[mode]</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts={}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;layout&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>plane<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classcamcam_1_1_cam_cam_1af7e60c4dabd6dcfab7ca2d31e070c2c2" kindref="member">planes</ref>:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>part<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>plane.getParts():</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts[part.name]<sp/>=<sp/>[plane,<sp/>part]</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>open(layout_file,<sp/></highlight><highlight class="stringliteral">&apos;</highlight><highlight class="stringliteral">r&apos;)</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheets<sp/>=<sp/>pickle.load(l)</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>sheets</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sheet<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sheets[</highlight><highlight class="stringliteral">&apos;sheets&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sheets[</highlight><highlight class="stringliteral">&apos;sheets&apos;</highlight><highlight class="normal">][sheet]:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(plane,<sp/>part)<sp/>=<sp/>parts[p[</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tconfig<sp/>=<sp/>config</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tconfig[</highlight><highlight class="stringliteral">&apos;transformations&apos;</highlight><highlight class="normal">]<sp/>=<sp/>[{</highlight><highlight class="stringliteral">&apos;rotate&apos;</highlight><highlight class="normal">:[<sp/><ref refid="namespaceminivec_1_1minivec_1a05c598591e86e4ad044aa85b35bfaf66" kindref="member">V</ref>(p[</highlight><highlight class="stringliteral">&apos;startcentre&apos;</highlight><highlight class="normal">][0],p[</highlight><highlight class="stringliteral">&apos;startcentre&apos;</highlight><highlight class="normal">][1]),<sp/>p[</highlight><highlight class="stringliteral">&apos;rotate&apos;</highlight><highlight class="normal">]],<sp/></highlight><highlight class="stringliteral">&apos;translate&apos;</highlight><highlight class="normal">:<ref refid="namespaceminivec_1_1minivec_1a05c598591e86e4ad044aa85b35bfaf66" kindref="member">V</ref>(p[</highlight><highlight class="stringliteral">&apos;translate&apos;</highlight><highlight class="normal">][0],<sp/>p[</highlight><highlight class="stringliteral">&apos;translate&apos;</highlight><highlight class="normal">][1]<sp/>)<sp/>}]</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plane.render_part(part,<sp/>mode,<sp/>tconfig)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(plane.lay_out)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>dict:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>plane.lay_out:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>out:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i]=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>+=<sp/>plane.lay_out[i]</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;plane.lay_out<sp/>is<sp/>not<sp/>a<sp/>dict&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;suffix&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>modeconfig:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modeconfig[</highlight><highlight class="stringliteral">&apos;suffix&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>out:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f=open(self.<ref refid="classcamcam_1_1_cam_cam_1a6e141484cb4846a485431bfea419001a" kindref="member">sanitise_filename</ref>(sheet+<sp/>i<sp/>+<sp/>modeconfig[</highlight><highlight class="stringliteral">&apos;file_suffix&apos;</highlight><highlight class="normal">]),<sp/></highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(modeconfig[</highlight><highlight class="stringliteral">&apos;prefix&apos;</highlight><highlight class="normal">]<sp/>+<sp/>out[i]<sp/>+<sp/>modeconfig[</highlight><highlight class="stringliteral">&apos;postfix&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcamcam_1_1_cam_cam_1a6e141484cb4846a485431bfea419001a" kindref="member">sanitise_filename</ref>(self,filename):</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">.join(x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>filename<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x.isalnum()<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;-._&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcamcam_1_1_cam_cam_1a8cb2fc8c85c9da7fc85c0bdbdfc1177e" kindref="member">listparts</ref>(self):</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>plane<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classcamcam_1_1_cam_cam_1af7e60c4dabd6dcfab7ca2d31e070c2c2" kindref="member">planes</ref>:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plane.list_all()</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcamcam_1_1_cam_cam_1a04d01da90dc3b5c2949604c60f732090" kindref="member">get_bom</ref>(self):</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret=[]</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>plane<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classcamcam_1_1_cam_cam_1af7e60c4dabd6dcfab7ca2d31e070c2c2" kindref="member">planes</ref>:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.extend(plane.get_bom())</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lookup={}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret2=[]</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c=0</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ret:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(l)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>BOM_part:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>str(l.part_number)+str(l.length)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lookup:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret2[lookup[str(l.part_number)+str(l.length)]].number+=l.number</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret2.append(l)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lookup[str(l.part_number)+str(l.length)]=c</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c+=1</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret2.append(l)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c+=1</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ret2:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>l</highlight></codeline>
<codeline lineno="98"><highlight class="normal">camcam<sp/>=<sp/><ref refid="classcamcam_1_1_cam_cam" kindref="compound">CamCam</ref>()</highlight></codeline>
<codeline lineno="99"><highlight class="normal">milling<sp/>=<sp/><ref refid="class_milling_1_1_milling" kindref="compound">Milling.Milling</ref>()</highlight></codeline>
<codeline lineno="100"><highlight class="normal">parser<sp/>=<sp/>OptionParser()</highlight></codeline>
<codeline lineno="101"><highlight class="normal">modes<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;,&apos;</highlight><highlight class="normal">.join(milling.mode_config.keys())</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">parser.add_option(</highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--mode&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;mode&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;mode<sp/>the<sp/>output<sp/>should<sp/>be<sp/>in.<sp/>Can<sp/>be<sp/>one<sp/>of<sp/>&quot;</highlight><highlight class="normal">+modes,<sp/>metavar=</highlight><highlight class="stringliteral">&quot;MODE&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">parser.add_option(</highlight><highlight class="stringliteral">&quot;-l&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--list&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action=</highlight><highlight class="stringliteral">&quot;store_true&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;listparts&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;list<sp/>all<sp/>parts&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">parser.add_option(</highlight><highlight class="stringliteral">&quot;-b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--sep-border&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action=</highlight><highlight class="stringliteral">&quot;store_true&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;sep_border&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;Create<sp/>a<sp/>separate<sp/>file<sp/>for<sp/>the<sp/>border&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">parser.add_option(</highlight><highlight class="stringliteral">&quot;-B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--bom&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action=</highlight><highlight class="stringliteral">&quot;store_true&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;bom&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;Print<sp/>Bill<sp/>of<sp/>Materials&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">parser.add_option(</highlight><highlight class="stringliteral">&quot;-x&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--xreps&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;repeatx&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;number<sp/>of<sp/>times<sp/>should<sp/>be<sp/>repeated<sp/>in<sp/>x<sp/>direction&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">parser.add_option(</highlight><highlight class="stringliteral">&quot;-y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--yreps&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;repeaty&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;number<sp/>of<sp/>times<sp/>should<sp/>be<sp/>repeated<sp/>in<sp/>y<sp/>direction&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">parser.add_option(</highlight><highlight class="stringliteral">&quot;-X&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--xspacing&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;xspacing&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;spacing<sp/>in<sp/>x<sp/>direction&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">parser.add_option(</highlight><highlight class="stringliteral">&quot;-Y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--yspacing&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;yspacing&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;spacing<sp/>in<sp/>x<sp/>direction&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">parser.add_option(</highlight><highlight class="stringliteral">&quot;-r&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--repeatmode&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;repeatmode&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;Repeat<sp/>mode<sp/>-<sp/>can<sp/>be<sp/>origin<sp/>-<sp/>move<sp/>the<sp/>origin,<sp/>regexp<sp/>-<sp/>replace<sp/>all<sp/>the<sp/>X<sp/>and<sp/>Y<sp/>coordinates&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">parser.add_option(</highlight><highlight class="stringliteral">&apos;-o&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;--options&apos;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&apos;options&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&apos;options<sp/>for<sp/>the<sp/>code<sp/>-<sp/>format<sp/>var=value;var=value&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">parser.add_option(</highlight><highlight class="stringliteral">&apos;-R&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;--rotate&apos;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&apos;rotate&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&apos;Rotate<sp/>by<sp/>angle&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">parser.add_option(</highlight><highlight class="stringliteral">&apos;-M&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;--mirror&apos;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&apos;mirror&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;Mirror<sp/>in<sp/>x&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">parser.add_option(</highlight><highlight class="stringliteral">&apos;-Z&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;--zbase&apos;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&apos;zbase&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;set<sp/>z=0<sp/>to<sp/>bottom<sp/>of<sp/>material&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">parser.add_option(</highlight><highlight class="stringliteral">&apos;-z&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;--nozbase&apos;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&apos;zbase&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action=</highlight><highlight class="stringliteral">&apos;store_false&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;set<sp/>z=0<sp/>to<sp/>top<sp/>of<sp/>material<sp/>(default)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">parser.add_option(</highlight><highlight class="stringliteral">&quot;-L&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--layout-file&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;layout_file&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;file<sp/>for<sp/>layout&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">(options,<sp/>args)<sp/>=<sp/>parser.parse_args()</highlight></codeline>
<codeline lineno="137"><highlight class="normal">config={}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">camcam.command_args={}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.options:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pair<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>options.options.split(</highlight><highlight class="stringliteral">&apos;;&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a=pair.split(</highlight><highlight class="stringliteral">&apos;=&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(a)&gt;1:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camcam.command_args[a[0]]=a[1]</highlight></codeline>
<codeline lineno="145"><highlight class="normal">config[</highlight><highlight class="stringliteral">&apos;command_args&apos;</highlight><highlight class="normal">]=camcam.command_args</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.xspacing<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>options.repeatx<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>options.yspacing<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>options.repeaty:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;xspacing&apos;</highlight><highlight class="normal">]=options.xspacing</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;repeatx&apos;</highlight><highlight class="normal">]=options.repeatx</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;yspacing&apos;</highlight><highlight class="normal">]=options.yspacing</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;repeaty&apos;</highlight><highlight class="normal">]=options.repeaty</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>options.xspacing<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>options.repeatx:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;xspacing&apos;</highlight><highlight class="normal">]=options.xspacing</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;repeatx&apos;</highlight><highlight class="normal">]=options.repeatx</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;yspacing&apos;</highlight><highlight class="normal">]=1</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;repeaty&apos;</highlight><highlight class="normal">]=0</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>options.yspacing<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>options.repeaty:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;yspacing&apos;</highlight><highlight class="normal">]=options.yspacing</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;repeaty&apos;</highlight><highlight class="normal">]=options.repeaty</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;xspacing&apos;</highlight><highlight class="normal">]=1</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;repeatx&apos;</highlight><highlight class="normal">]=1</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.repeatmode:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;repeatmode&apos;</highlight><highlight class="normal">]=options.repeatmode<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.sep_border:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;sep_border&apos;</highlight><highlight class="normal">]=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;sep_border&apos;</highlight><highlight class="normal">]=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">config[</highlight><highlight class="stringliteral">&apos;transformations&apos;</highlight><highlight class="normal">]=[{}]</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.rotate:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;transformations&apos;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&apos;rotate&apos;</highlight><highlight class="normal">]<sp/>=<sp/>[<ref refid="namespaceminivec_1_1minivec_1a05c598591e86e4ad044aa85b35bfaf66" kindref="member">V</ref>(0,0),<sp/>float(options.rotate)]</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.mirror:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;transformations&apos;</highlight><highlight class="normal">][0][</highlight><highlight class="stringliteral">&apos;mirror&apos;</highlight><highlight class="normal">]<sp/>=<sp/>[<ref refid="namespaceminivec_1_1minivec_1a05c598591e86e4ad044aa85b35bfaf66" kindref="member">V</ref>(0,0),</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.zbase:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>config[</highlight><highlight class="stringliteral">&apos;zbase&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">#<sp/>load<sp/>all<sp/>the<sp/>requested<sp/>files<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>arg<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>execfile(arg)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.listparts:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>camcam.listparts()</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.bom:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>camcam.get_bom()</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>options.layout_file:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>camcam.render_layout(options.mode,<sp/>options.layout_file,<sp/>config)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>camcam.render(options.mode,config)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/db/camcam/camcam.py"/>
  </compounddef>
</doxygen>
