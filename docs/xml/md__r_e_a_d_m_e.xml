<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="md__r_e_a_d_m_e" kind="page">
    <compoundname>md_README</compoundname>
    <title>camcam</title>
    <detaileddescription>
<para>A python based CAM scripting system</para><para>This is a system for designing 2D objects in python and outputting GCode, svg etc</para><para>to produce output the input files are created as python scripts which are executed within <ref refid="camcam_8py" kindref="compound">camcam.py</ref> This is slightly odd but means they can behave more like save files, than source files.</para><para>Run like:</para><para>python <ref refid="camcam_8py" kindref="compound">camcam.py</ref> -m [mode] file1.py file2.py mode: diagram - produces one file with all the parts drawn on visualise - produces an svg with all parts, and the cutting line around the outside dave-emc - emc2 compatible gcode makespacerouter - very simple gcode formatted as DOS file eagle - a file you can import into eagle PCB software laser - individual svg files for each part</para><para>python <ref refid="camcam_8py" kindref="compound">camcam.py</ref> -B will produce a bill of materials</para><para>It has quite nice features for dealing with objects made of multiple layers It can do funky things with finger joints including create arbitary polyhedra from them with the ArbitraryBox</para><para>as the docs indicate this is very alpha atm </para>    </detaileddescription>
  </compounddef>
</doxygen>
