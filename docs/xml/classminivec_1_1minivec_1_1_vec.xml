<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classminivec_1_1minivec_1_1_vec" kind="class" language="Python" prot="public">
    <compoundname>minivec::minivec::Vec</compoundname>
    <basecompoundref prot="public" virt="non-virtual">object</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classminivec_1_1minivec_1_1_vec_1acbfa7634f17faed54025b90b90647ee5" prot="private" static="yes" mutable="no">
        <type>tuple</type>
        <definition>tuple minivec.minivec.Vec::__slots__</definition>
        <argsstring></argsstring>
        <name>__slots__</name>
        <initializer>= (&quot;__vec&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="97" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classminivec_1_1minivec_1_1_vec_1a1844b6c500d6b3870acb8cd66b403849" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>minivec.minivec.Vec::__radd__</definition>
        <argsstring></argsstring>
        <name>__radd__</name>
        <initializer>= <ref refid="classminivec_1_1minivec_1_1_vec_1a15e11ffd0086905fd76638df069991fa" kindref="member">__add__</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="297" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classminivec_1_1minivec_1_1_vec_1a0a4ce4059d98e2559b999c1c96e77ce0" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>minivec.minivec.Vec::__rmul__</definition>
        <argsstring></argsstring>
        <name>__rmul__</name>
        <initializer>= <ref refid="classminivec_1_1minivec_1_1_vec_1affb657e861acd24287f2faaf6a1e0ce4" kindref="member">__mul__</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="317" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classminivec_1_1minivec_1_1_vec_1a63e38658c73b937ac6815d866e9baee5" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>minivec.minivec.Vec::__truediv__</definition>
        <argsstring></argsstring>
        <name>__truediv__</name>
        <initializer>= <ref refid="classminivec_1_1minivec_1_1_vec_1aba3d464d7c66b4bc517db32b6df1c5cb" kindref="member">__div__</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="332" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classminivec_1_1minivec_1_1_vec_1a89dac32c40effe32ec1c676441d28edb" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>minivec.minivec.Vec::__rtruediv__</definition>
        <argsstring></argsstring>
        <name>__rtruediv__</name>
        <initializer>= <ref refid="classminivec_1_1minivec_1_1_vec_1a8768df83cc4ac5d21e38ee804d339210" kindref="member">__rdiv__</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="333" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classminivec_1_1minivec_1_1_vec_1a4e8f175475a02b38ead9af90c41a503b" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>minivec.minivec.Vec::__xor__</definition>
        <argsstring></argsstring>
        <name>__xor__</name>
        <initializer>= <ref refid="classminivec_1_1minivec_1_1_vec_1a026c12dff843c6a2dda345baf6a11bc6" kindref="member">dot</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="361" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classminivec_1_1minivec_1_1_vec_1a6be8d4a72052c9a94d97143256395eb5" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>minivec.minivec.Vec::__rxor__</definition>
        <argsstring></argsstring>
        <name>__rxor__</name>
        <initializer>= <ref refid="classminivec_1_1minivec_1_1_vec_1a026c12dff843c6a2dda345baf6a11bc6" kindref="member">dot</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="362" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classminivec_1_1minivec_1_1_vec_1a08687ea44386e049c4e687da7f3603de" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>minivec.minivec.Vec::__mod__</definition>
        <argsstring></argsstring>
        <name>__mod__</name>
        <initializer>= <ref refid="classminivec_1_1minivec_1_1_vec_1aa4aec894883922ca4901a2ebc5ce8160" kindref="member">cross</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="363" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classminivec_1_1minivec_1_1_vec_1aa2fbd35b0c2059f8cb983e523bc0dcbf" prot="private" static="yes" mutable="no">
        <type></type>
        <definition>minivec.minivec.Vec::__rmod__</definition>
        <argsstring></argsstring>
        <name>__rmod__</name>
        <initializer>= <ref refid="classminivec_1_1minivec_1_1_vec_1aa4aec894883922ca4901a2ebc5ce8160" kindref="member">cross</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="364" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="364" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classminivec_1_1minivec_1_1_vec_1ac08a2b6165dcf25f73dc8c87fd981a1f" prot="public" static="yes" mutable="no">
        <type>tuple</type>
        <definition>tuple minivec.minivec.Vec::radians</definition>
        <argsstring></argsstring>
        <name>radians</name>
        <initializer>= acos(min(max(<ref refid="classminivec_1_1minivec_1_1_vec_1a026c12dff843c6a2dda345baf6a11bc6" kindref="member">dot</ref> / (selfLength * otherLength), -1), 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="264" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="264" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classminivec_1_1minivec_1_1_vec_1ad7016baec3ea675848a21a9a3420eb6f" prot="private" static="no" mutable="no">
        <type></type>
        <definition>minivec.minivec.Vec::__vec</definition>
        <argsstring></argsstring>
        <name>__vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="100" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a4c2c0865dc203579c270a0cc58d9eb39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__init__</definition>
        <argsstring>(self, vec)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>vec</type>
          <defname>vec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="99" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1aa97b731d40eca557a4c325d4678b2f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.Error</definition>
        <argsstring></argsstring>
        <name>Error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Create a new vector that represents an error.
What this actually means is dependent on the minivec error defined
in the current context. By default it is the same as Vec(0)
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="104" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="104" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a8b513799d2c6926e09989b0c25365cb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__repr__</definition>
        <argsstring>(self)</argsstring>
        <name>__repr__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="116" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1ace2b8ef3008f5499d4a823a1e8c3b893" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__iter__</definition>
        <argsstring>(self)</argsstring>
        <name>__iter__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="120" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1ac4520965b2684c281fea32aa004f853e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__len__</definition>
        <argsstring>(self)</argsstring>
        <name>__len__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="124" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a73f13171f6bf65f6883eed6b41443186" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__getitem__</definition>
        <argsstring>(self, key)</argsstring>
        <name>__getitem__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>key</type>
          <defname>key</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="128" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="128" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a5982c7bfb6f16755c3ed1a236800ab6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.exact</definition>
        <argsstring>(self, vec)</argsstring>
        <name>exact</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>vec</type>
          <defname>vec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Compare if two vectors are exactly equal.
This will not use the epsilon value in the current minivec context.
This is mostly the same as the comparison operators, although this accepts any type
of argument that can convert into a vector.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="135" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="135" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1acf9ecce0bb0d81440115c8d7c1e56910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.almost</definition>
        <argsstring>(self, vec)</argsstring>
        <name>almost</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>vec</type>
          <defname>vec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Compare if two vectors are nearly equal.
This uses the epsilon value in the current minivec context.
This accepts any type of argument that can convert into a vector.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="145" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="145" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1ad61ccbe3ada89322c315406699b59517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.length</definition>
        <argsstring>(self, vec)</argsstring>
        <name>length</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>vec</type>
          <defname>vec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get the length of the vector.
If an optional second vector is given, then this is the length of the distance between that vector.
The other vector argument can be any object that converts into a vector.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="157" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="157" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a71c1a5133bf7ec08d78abdb865a8fedc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.length2</definition>
        <argsstring>(self, vec)</argsstring>
        <name>length2</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>vec</type>
          <defname>vec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Get the squared length of the vector.
This uses the epsilon value in the current minivec context.
This accepts any type of argument that can convert into a vector.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="173" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="173" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a46468d59979725bfd60926ac1b3e8298" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.normalize</definition>
        <argsstring></argsstring>
        <name>normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Create a new vector with the length of one.
This does not change the direction of the vector, only the length.
If the vector has zero length, then this will return an error vector.
An optional length argument can be given which sets the length of the vector
to a value other than 1. Negative lengths will also invert the vector.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="189" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="189" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1ac1c9841ef2b35a601ae8dce1a3899406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.reflect</definition>
        <argsstring>(self, vec)</argsstring>
        <name>reflect</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>vec</type>
          <defname>vec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Create a new vector representing the direction after reflecting off a plane normal.
The other vector must be normalized and can be any type of object that converts to a vector.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="206" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="206" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a36990fc110e133b4ee50a95965e6fa19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.project</definition>
        <argsstring>(self, vec)</argsstring>
        <name>project</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>vec</type>
          <defname>vec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Create a vector projects the current vector to the closest point on another.
The new vector will have the same direction as the other given argument.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="214" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="214" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1ae6dfe759bb369d54948485099161bf1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.orthogonal</definition>
        <argsstring>(self, vec)</argsstring>
        <name>orthogonal</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>vec</type>
          <defname>vec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Create a vector that represents the argument vector made perpendicular.
The new vector will be on the same plane that the two vectors provide.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="222" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="222" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1aa4aec894883922ca4901a2ebc5ce8160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.cross</definition>
        <argsstring>(self, vec)</argsstring>
        <name>cross</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>vec</type>
          <defname>vec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Cross multiplication with another vector.
This creates a new vector that is perpendicular to both this vector and the other.
As a shortcut, cross multiplication has been overridden as the modulo (%) operator.
This is the right handed cross product where X cross Y equals Z.

  Vec(1,0,0) % Vec(0, 1, 0) == Vec(0, 0, 1)
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="230" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="230" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a026c12dff843c6a2dda345baf6a11bc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.dot</definition>
        <argsstring>(self, vec)</argsstring>
        <name>dot</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>vec</type>
          <defname>vec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Dot product with another vector.
This returns a single number. When both vectors are normalized, this represents the cosine
of the angle between both vectors.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="243" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="243" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1ae57feb83d476b9ba9bec8d74603a9b1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.angle</definition>
        <argsstring>(self, vec)</argsstring>
        <name>angle</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>vec</type>
          <defname>vec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Angle between two non normalized vectors in degrees.
This does not require that the vectors be normalized.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="253" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="253" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a51b8eb5018aa4fc5be94d4fdaf4e7bef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__neg__</definition>
        <argsstring>(self)</argsstring>
        <name>__neg__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="268" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="268" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1aa3b1a2a83fe703afa6eb5f84cbad2f87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__pos__</definition>
        <argsstring>(self)</argsstring>
        <name>__pos__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="273" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1ab17e5813d9c7f3fa56fc4592128e9eee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__hash__</definition>
        <argsstring>(self)</argsstring>
        <name>__hash__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="277" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="277" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1ae0f860d7cfd7b0f008fbf846a772e3ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__cmp__</definition>
        <argsstring>(self, other)</argsstring>
        <name>__cmp__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>other</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="281" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="281" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a9806118391eb96ea97f4bf5427d40c41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__nonzero__</definition>
        <argsstring>(self)</argsstring>
        <name>__nonzero__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="286" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="286" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a15e11ffd0086905fd76638df069991fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__add__</definition>
        <argsstring>(self, other)</argsstring>
        <name>__add__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>other</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="292" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="292" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a94056d5948a4953a5b16aa88e85693c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__sub__</definition>
        <argsstring>(self, other)</argsstring>
        <name>__sub__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>other</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="300" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="300" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1ac6b1aae988f6cdba5e83a3b0291f1357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__rsub__</definition>
        <argsstring>(self, other)</argsstring>
        <name>__rsub__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>other</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="306" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="306" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1affb657e861acd24287f2faaf6a1e0ce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__mul__</definition>
        <argsstring>(self, other)</argsstring>
        <name>__mul__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>other</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="312" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="312" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1aba3d464d7c66b4bc517db32b6df1c5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__div__</definition>
        <argsstring>(self, other)</argsstring>
        <name>__div__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>other</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="320" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="320" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a8768df83cc4ac5d21e38ee804d339210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__rdiv__</definition>
        <argsstring>(self, other)</argsstring>
        <name>__rdiv__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>other</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="327" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="327" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1aed509a7f6cf9612ef4340a8007be802e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__floordiv__</definition>
        <argsstring>(self, other)</argsstring>
        <name>__floordiv__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>other</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="336" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="336" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1ac8994c91d9d51f598a843bea33c0c903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__rfloordiv__</definition>
        <argsstring>(self, other)</argsstring>
        <name>__rfloordiv__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>other</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="342" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="342" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a874e050c750a9247db2d4888ec786738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__pow__</definition>
        <argsstring></argsstring>
        <name>__pow__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="348" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="348" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a67e96d808a604a6b097c5f7e948936da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.__rpow__</definition>
        <argsstring>(self, other)</argsstring>
        <name>__rpow__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>other</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="356" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="356" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a574d9ffdbb0882b8eeffb1de2349c400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.lerp</definition>
        <argsstring>(self, percent, vec)</argsstring>
        <name>lerp</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>percent</type>
          <defname>percent</defname>
        </param>
        <param>
          <type>vec</type>
          <defname>vec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Linearly interpolate between this vector and another.
The percentage is between 0.0 and 1.0, but numbers outside that range will also work.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="367" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="367" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a739a2e0dc01ccf7933e7d3049db2df6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.swizzle</definition>
        <argsstring>(self, lookup)</argsstring>
        <name>swizzle</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>lookup</type>
          <defname>lookup</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Create a new list of values using a shorthand for the vector attributes.
The lookup argument is a string and each character represents a value in
the new list.

  x, represents axis 0
  y, represents axis 1
  z, represents axis 2
  X, represents negagive axis 0
  Y, represents negagive axis 1
  Z, represents negagive axis 2
  0, represents a literal 0.0
  1, representa a literal 1.0
  !, representa a literal -1.0

Any other character in the lookup string raises an exception
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="379" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="379" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a0c738e1b2b652117221c7c65b1f86ed6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.transform</definition>
        <argsstring>(self, matrix)</argsstring>
        <name>transform</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>matrix</type>
          <defname>matrix</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Apply a matrix transform to the vector.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="405" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="405" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1afed5a575947602d4465c575c9a7cb487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.transformDir</definition>
        <argsstring>(self, matrix)</argsstring>
        <name>transformDir</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>matrix</type>
          <defname>matrix</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Apply a matrix transform to a directional vector, like a normal.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="424" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="424" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a900f4777f70b5890dd3d00f0d03c3ae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.contains</definition>
        <argsstring>(self, other)</argsstring>
        <name>contains</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>other</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Test if another object is contained by this point.
Since this object represents a single point, it can only be true of other vectors.
This method can work with any object type that implements a _rcontains method
that accepts a Vector argument.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="436" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="436" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1ac982df914bb9c39e4d047394038f8d23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.intersect_lines</definition>
        <argsstring>(self, a, b, c, d)</argsstring>
        <name>intersect_lines</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>b</type>
          <defname>b</defname>
        </param>
        <param>
          <type>c</type>
          <defname>c</defname>
        </param>
        <param>
          <type>d</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="456" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="456" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="classminivec_1_1minivec_1_1_vec_1a0f5fa85fedf86c37d86dc831048110ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def minivec.minivec.Vec.intersects</definition>
        <argsstring>(self, other)</argsstring>
        <name>intersects</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>other</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Test any part of another object intersects this point.
This method can work with any object type that implements a _rcontains method
that accepts a Vector argument.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/db/camcam/minivec/minivec.py" line="461" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="461" bodyend="492"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Immutable vector class for linear algebra.
The vector acts as a regular tuple with three floating point numbers.
All methods and operators are safe from mathematical exceptions.
In case of an error, a vector of all zeros is returned, which is a
&quot;False&quot; vector.

The vector constructor, methods, and operators can work with a
variety of types of arguments. Anything that can be an iterator
giving three numbers will work. Any method calls can also accept
one or three arguments. Integer arguments will be converted into float.

  Vec()
  Vec(1.0)
  Vec(1, 2, 3)
  Vec([4.0, 5.0, 6.0])
  Vec(Vec(12))
  Vec(xrange(3))
</verbatim> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1768">
        <label>minivec.minivec.Vec</label>
        <link refid="classminivec_1_1minivec_1_1_vec"/>
        <childnode refid="1769" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1769">
        <label>object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1770">
        <label>minivec.minivec.Vec</label>
        <link refid="classminivec_1_1minivec_1_1_vec"/>
        <childnode refid="1771" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1771">
        <label>object</label>
      </node>
    </collaborationgraph>
    <location file="/home/db/camcam/minivec/minivec.py" line="77" column="1" bodyfile="/home/db/camcam/minivec/minivec.py" bodystart="77" bodyend="493"/>
    <listofallmembers>
      <member refid="classminivec_1_1minivec_1_1_vec_1a15e11ffd0086905fd76638df069991fa" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__add__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1ae0f860d7cfd7b0f008fbf846a772e3ee" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__cmp__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1aba3d464d7c66b4bc517db32b6df1c5cb" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__div__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1aed509a7f6cf9612ef4340a8007be802e" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__floordiv__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a73f13171f6bf65f6883eed6b41443186" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__getitem__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1ab17e5813d9c7f3fa56fc4592128e9eee" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__hash__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a4c2c0865dc203579c270a0cc58d9eb39" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__init__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1ace2b8ef3008f5499d4a823a1e8c3b893" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__iter__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1ac4520965b2684c281fea32aa004f853e" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__len__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a08687ea44386e049c4e687da7f3603de" prot="private" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__mod__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1affb657e861acd24287f2faaf6a1e0ce4" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__mul__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a51b8eb5018aa4fc5be94d4fdaf4e7bef" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__neg__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a9806118391eb96ea97f4bf5427d40c41" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__nonzero__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1aa3b1a2a83fe703afa6eb5f84cbad2f87" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__pos__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a874e050c750a9247db2d4888ec786738" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__pow__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a1844b6c500d6b3870acb8cd66b403849" prot="private" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__radd__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a8768df83cc4ac5d21e38ee804d339210" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__rdiv__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a8b513799d2c6926e09989b0c25365cb8" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__repr__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1ac8994c91d9d51f598a843bea33c0c903" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__rfloordiv__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1aa2fbd35b0c2059f8cb983e523bc0dcbf" prot="private" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__rmod__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a0a4ce4059d98e2559b999c1c96e77ce0" prot="private" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__rmul__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a67e96d808a604a6b097c5f7e948936da" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__rpow__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1ac6b1aae988f6cdba5e83a3b0291f1357" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__rsub__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a89dac32c40effe32ec1c676441d28edb" prot="private" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__rtruediv__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a6be8d4a72052c9a94d97143256395eb5" prot="private" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__rxor__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1acbfa7634f17faed54025b90b90647ee5" prot="private" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__slots__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a94056d5948a4953a5b16aa88e85693c9" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__sub__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a63e38658c73b937ac6815d866e9baee5" prot="private" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__truediv__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1ad7016baec3ea675848a21a9a3420eb6f" prot="private" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__vec</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a4e8f175475a02b38ead9af90c41a503b" prot="private" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>__xor__</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1acf9ecce0bb0d81440115c8d7c1e56910" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>almost</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1ae57feb83d476b9ba9bec8d74603a9b1e" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>angle</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a900f4777f70b5890dd3d00f0d03c3ae6" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>contains</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1aa4aec894883922ca4901a2ebc5ce8160" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>cross</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a026c12dff843c6a2dda345baf6a11bc6" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>dot</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1aa97b731d40eca557a4c325d4678b2f7c" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>Error</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a5982c7bfb6f16755c3ed1a236800ab6e" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>exact</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1ac982df914bb9c39e4d047394038f8d23" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>intersect_lines</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a0f5fa85fedf86c37d86dc831048110ff" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>intersects</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1ad61ccbe3ada89322c315406699b59517" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>length</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a71c1a5133bf7ec08d78abdb865a8fedc" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>length2</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a574d9ffdbb0882b8eeffb1de2349c400" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>lerp</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a46468d59979725bfd60926ac1b3e8298" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>normalize</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1ae6dfe759bb369d54948485099161bf1a" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>orthogonal</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a36990fc110e133b4ee50a95965e6fa19" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>project</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1ac08a2b6165dcf25f73dc8c87fd981a1f" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>radians</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1ac1c9841ef2b35a601ae8dce1a3899406" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>reflect</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a739a2e0dc01ccf7933e7d3049db2df6b" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>swizzle</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1a0c738e1b2b652117221c7c65b1f86ed6" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>transform</name></member>
      <member refid="classminivec_1_1minivec_1_1_vec_1afed5a575947602d4465c575c9a7cb487" prot="public" virt="non-virtual"><scope>minivec::minivec::Vec</scope><name>transformDir</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
